{"version":3,"file":"react-picky.esm.js","sources":["../src/lib/debounce.ts","../src/lib/includes.ts","../src/lib/utils.ts","../src/lib/format.ts","../src/Placeholder.tsx","../src/Filter.tsx","../src/Option.tsx","../src/SelectAll.tsx","../src/Button.tsx","../src/Picky.tsx"],"sourcesContent":["export const debounce = (fn: Function, delay: number) => {\n  let timeoutID: NodeJS.Timer | null = null;\n  return function(...args: any[]) {\n    if (timeoutID) {\n      clearTimeout(timeoutID);\n    }\n    //@ts-ignore\n    const that: any = this as any;\n    timeoutID = setTimeout(() => {\n      fn.apply(that, args);\n    }, delay);\n  };\n};\n","/**\n * Check if a string contains a value\n */\nexport function includes(\n  str: string,\n  term: string,\n  caseSensitive: boolean = false\n): boolean {\n  if (!caseSensitive) {\n    return (\n      String(str)\n        .toLowerCase()\n        .indexOf(String(term).toLowerCase()) > -1\n    );\n  } else {\n    return String(str).indexOf(String(term)) > -1;\n  }\n}\n","import { OptionsType, OptionType, ComplexOptionType } from 'types';\n\nexport const isDataObject = (\n  obj: OptionType | undefined,\n  valueKey: string | undefined,\n  labelKey: string | undefined\n): boolean => {\n  if (typeof labelKey === 'undefined' || typeof valueKey === 'undefined') {\n    return false;\n  }\n  return (\n    typeof obj === 'object' &&\n    obj.hasOwnProperty(valueKey) &&\n    obj.hasOwnProperty(labelKey)\n  );\n};\n\nexport const hasItem = (\n  all: OptionsType | OptionType | undefined,\n  item: OptionType,\n  valueKey?: string,\n  labelKey?: string,\n  returnIndex: boolean = false\n) => {\n  if (!all || !item) return false;\n  if (Array.isArray(all)) {\n    if (isDataObject(item, valueKey, labelKey)) {\n      const find = all.findIndex(\n        opt =>\n          (opt as ComplexOptionType)[valueKey!] ===\n          (item as ComplexOptionType)[valueKey!]\n      );\n      if (returnIndex) {\n        return find;\n      }\n      return find > -1;\n    } else {\n      const indexOfItem = all.indexOf(item);\n      if (returnIndex) {\n        return indexOfItem;\n      }\n      return indexOfItem > -1;\n    }\n  } else {\n    if (isDataObject(item, valueKey, labelKey)) {\n      return (\n        (all as ComplexOptionType)[valueKey!] ===\n        (item as ComplexOptionType)[valueKey!]\n      );\n    }\n    return all === item;\n  }\n};\n\nexport const hasItemIndex = (\n  all: OptionsType | OptionType,\n  item: OptionType,\n  valueKey?: string,\n  labelKey?: string\n): number => hasItem(all, item, valueKey, labelKey, true) as number;\n\nexport const keyExtractor = (\n  item: OptionType,\n  valueKey?: string,\n  labelKey?: string\n) =>\n  isDataObject(item, valueKey, labelKey)\n    ? (item as ComplexOptionType)[valueKey!]\n    : item;\nexport const labelExtractor = (\n  item: OptionType,\n  valueKey?: string,\n  labelKey?: string\n) =>\n  isDataObject(item, valueKey, labelKey)\n    ? (item as ComplexOptionType)[labelKey!]\n    : item;\n\nexport function sortCollection(array: any[], valueKey?: string): any[] {\n  if (valueKey) {\n    return array.sort((a, b) => (a[valueKey] < b[valueKey] ? -1 : 1));\n  } else {\n    return array.sort((a, b) => (a < b ? -1 : 1));\n  }\n}\n\nexport function arraysEqual(left: any[], right: any[]): boolean {\n  if (left.length !== right.length) return false;\n  const leftLen = left.length;\n  let i = leftLen;\n  while (i) {\n    if (left[i] !== right[i]) return false;\n    i--;\n  }\n  return true;\n}\n\nexport const asArray = (obj: any): any[] => obj || [];\n","function split(str: string): string {\n  let a: number = 1;\n  let res: string = '';\n\n  const parts = (str || '').split('%');\n  const len: number = parts.length;\n\n  if (len > 0) {\n    res += parts[0];\n  }\n\n  for (let i = 1; i < len; i++) {\n    if (parts[i][0] === 's' || parts[i][0] === 'd') {\n      let value = arguments[a++];\n      res += parts[i][0] === 'd' ? Math.floor(value) : value;\n    } else if (parts[i][0]) {\n      res += '%' + parts[i][0];\n    } else {\n      i++;\n      res += '%' + parts[i][0];\n    }\n\n    res += parts[i].substring(1);\n  }\n\n  return res;\n}\n\nconst regex = /%[sdj]/;\n\nexport function format(message: string, ...args: any[]) {\n  if (regex.test(message)) {\n    return split.apply(null, arguments as any);\n  }\n  return Array.from(args).join(' ');\n}\n","import * as React from 'react';\nimport { format } from './lib/format';\nimport { isDataObject } from './lib/utils';\nimport { includes } from './lib/includes';\nimport {\n  OptionsType,\n  OptionType,\n  ComplexOptionType,\n  SimpleOptionType,\n  SelectionState,\n} from './types';\n\nconst isEmptyValue = (value: any) =>\n  value === null ||\n  value === undefined ||\n  (Array.isArray(value) && !value.length);\n\ntype PlaceholderProps = {\n  placeholder?: string;\n  value: OptionsType | OptionType | undefined;\n  numberDisplayed: number;\n  multiple: boolean;\n  valueKey?: string;\n  labelKey?: string;\n  manySelectedPlaceholder?: string;\n  allSelectedPlaceholder?: string;\n  allSelected: SelectionState;\n};\nconst Placeholder: React.FC<PlaceholderProps> = React.memo(\n  ({\n    placeholder,\n    value,\n    numberDisplayed,\n    multiple,\n    valueKey,\n    labelKey,\n    manySelectedPlaceholder,\n    allSelectedPlaceholder,\n    allSelected,\n  }) => {\n    let message: string = '';\n    if (isEmptyValue(value)) {\n      message = placeholder || '';\n    } else {\n      if (Array.isArray(value) && multiple) {\n        // If type is array and values length less than number displayed\n        // join the values\n        if (value.length <= numberDisplayed) {\n          message = value\n            .map(opt => {\n              if (isDataObject(opt, valueKey, labelKey)) {\n                return (opt as ComplexOptionType)[labelKey!];\n              }\n              return opt;\n            })\n            .join(', ');\n        } else {\n          // if many selected and not all selected then use the placeholder\n          if (manySelectedPlaceholder && allSelected !== 'all') {\n            // if it doesn't include the sprintf token then just use the placeholder\n            message = includes(manySelectedPlaceholder, '%s')\n              ? format(manySelectedPlaceholder, value.length)\n              : manySelectedPlaceholder;\n            //If all selected and there is an allselectedplaceholder use that\n          } else if (allSelected && allSelectedPlaceholder) {\n            // if it doesn't include the sprintf token then just use the placeholder\n            message = includes(allSelectedPlaceholder, '%s')\n              ? format(allSelectedPlaceholder, value.length)\n              : allSelectedPlaceholder;\n          }\n        }\n      } else {\n        let tempValue = Array.isArray(value) ? value[0] : value;\n        if (isDataObject(tempValue, valueKey, labelKey)) {\n          message = (tempValue as ComplexOptionType)[labelKey!];\n        } else {\n          message = String(tempValue as SimpleOptionType);\n        }\n      }\n    }\n\n    return (\n      <span\n        className={isEmptyValue(value) ? 'picky__placeholder' : undefined}\n        data-testid=\"picky_placeholder\"\n      >\n        {message}\n      </span>\n    );\n  },\n  areEqual\n);\n\nPlaceholder.defaultProps = {\n  placeholder: 'None selected',\n  allSelectedPlaceholder: '%s selected',\n  manySelectedPlaceholder: '%s selected',\n};\nPlaceholder.displayName = 'Picky(Placeholder)';\n\nfunction areEqual(prevProps: PlaceholderProps, nextProps: PlaceholderProps) {\n  return (\n    prevProps.multiple === nextProps.multiple &&\n    prevProps.value === nextProps.value &&\n    prevProps.numberDisplayed === nextProps.numberDisplayed &&\n    prevProps.allSelected === nextProps.allSelected &&\n    prevProps.allSelectedPlaceholder === nextProps.allSelectedPlaceholder\n  );\n}\nexport { Placeholder };\n","import * as React from 'react';\nexport type FilterProps = {\n  onFilterChange(term: string): void;\n  tabIndex: number | undefined;\n  placeholder?: string;\n} & React.RefAttributes<HTMLInputElement>;\n\nconst Filter: React.FC<FilterProps> = React.forwardRef(\n  (\n    { placeholder, tabIndex, onFilterChange },\n    ref: React.Ref<HTMLInputElement>\n  ) => {\n    return (\n      <div className=\"picky__filter\">\n        <input\n          ref={ref}\n          type=\"text\"\n          className=\"picky__filter__input\"\n          data-testid=\"picky__filter__input\"\n          placeholder={placeholder}\n          tabIndex={tabIndex}\n          aria-label=\"filter options\"\n          onChange={e => onFilterChange(e.target.value)}\n        />\n      </div>\n    );\n  }\n);\n\nFilter.defaultProps = {\n  placeholder: 'Filter...',\n};\n\nFilter.displayName = 'Picky(Filter)';\n\nexport { Filter };\n","import * as React from 'react';\nimport { isDataObject } from './lib/utils';\nimport { OptionType, ComplexOptionType } from './types';\n\ntype OptionProps = {\n  isSelected: boolean;\n  valueKey?: string;\n  labelKey?: string;\n  id: string;\n  item: OptionType;\n  style?: React.CSSProperties;\n  selectValue(option: OptionType): void;\n  multiple: boolean;\n  tabIndex: number | undefined;\n  disabled: boolean;\n};\nconst Option: React.FC<OptionProps> = React.memo(\n  ({\n    id,\n    item,\n    isSelected,\n    labelKey,\n    valueKey,\n    selectValue,\n    style,\n    multiple,\n    tabIndex,\n    disabled,\n  }) => {\n    const cssClass = isSelected ? 'option selected' : 'option';\n    const body = isDataObject(item, labelKey, valueKey)\n      ? (item as ComplexOptionType)[labelKey!]\n      : item;\n    const inputType = multiple ? 'checkbox' : 'radio';\n    const select = () => !disabled && selectValue(item);\n\n    return (\n      <div\n        tabIndex={tabIndex}\n        id={id}\n        role=\"option\"\n        style={style}\n        data-testid=\"option\"\n        data-selected={isSelected ? 'selected' : ''}\n        aria-selected={isSelected}\n        className={cssClass}\n        onClick={select}\n        onKeyPress={e => {\n          e.preventDefault();\n          if (!disabled) {\n            selectValue(item);\n          }\n        }}\n      >\n        <input\n          type={inputType}\n          readOnly\n          tabIndex={-1}\n          disabled={disabled}\n          checked={isSelected}\n          aria-label={body}\n          data-testid={'option-checkbox'}\n        />\n        {body}\n      </div>\n    );\n  },\n  areEqual\n);\n\nOption.displayName = 'Picky(Option)';\n\nfunction areEqual(prevProps: OptionProps, nextProps: OptionProps) {\n  return (\n    prevProps.multiple === nextProps.multiple &&\n    prevProps.isSelected === nextProps.isSelected &&\n    prevProps.id === nextProps.id &&\n    prevProps.item === nextProps.item &&\n    prevProps.tabIndex === nextProps.tabIndex &&\n    prevProps.disabled === nextProps.disabled\n  );\n}\nexport { Option };\n","import * as React from 'react';\nimport { SelectionState } from './types';\n\ntype SelectAllProps = {\n  tabIndex: number | undefined;\n  disabled: boolean;\n  allSelected: SelectionState;\n  id: string;\n  selectAllText?: string;\n  toggleSelectAll(): void;\n  visible: boolean;\n};\nconst SelectAll: React.FC<SelectAllProps> = React.memo(\n  ({\n    tabIndex,\n    disabled,\n    allSelected,\n    id,\n    selectAllText,\n    toggleSelectAll,\n    visible,\n  }) => {\n    const checkboxRef = React.createRef<HTMLInputElement>();\n    if (!visible) {\n      return null;\n    }\n\n    React.useEffect(() => {\n      if (checkboxRef.current === null) return;\n      checkboxRef.current.indeterminate = allSelected === 'partial';\n    }, [allSelected]);\n    return (\n      <div\n        tabIndex={tabIndex}\n        role=\"option\"\n        data-testid=\"selectall\"\n        id={id + '-option-' + 'selectall'}\n        data-selectall=\"true\"\n        aria-selected={allSelected === 'all'}\n        className={allSelected === 'all' ? 'option selected' : 'option'}\n        onClick={toggleSelectAll}\n        onKeyPress={toggleSelectAll}\n      >\n        <input\n          type=\"checkbox\"\n          ref={checkboxRef}\n          readOnly\n          data-testid=\"selectall-checkbox\"\n          tabIndex={-1}\n          checked={allSelected === 'all'}\n          aria-label=\"select all\"\n          disabled={disabled}\n        />\n        <span data-testid=\"select-all-text\">{selectAllText}</span>\n      </div>\n    );\n  },\n  areEqual\n);\n\nSelectAll.displayName = 'Picky(SelectAll)';\n\nfunction areEqual(prevProps: SelectAllProps, nextProps: SelectAllProps) {\n  return (\n    prevProps.tabIndex === nextProps.tabIndex &&\n    prevProps.disabled === nextProps.disabled &&\n    prevProps.allSelected === nextProps.allSelected &&\n    prevProps.selectAllText === nextProps.selectAllText &&\n    prevProps.visible === nextProps.visible\n  );\n}\nexport { SelectAll };\n","import * as React from 'react';\n\ntype ButtonProps = {} & React.DetailedHTMLProps<\n  React.ButtonHTMLAttributes<HTMLButtonElement>,\n  HTMLButtonElement\n>;\nconst Button: React.FC<ButtonProps> = ({\n  id,\n  disabled,\n  onClick,\n  children,\n  className,\n  ...rest\n}) => {\n  const buttonId = `${id}__button`;\n  const classes = [\n    'picky__input',\n    disabled ? 'picky__input--disabled' : '',\n    className,\n  ].join(' ');\n\n  return (\n    <button\n      id={buttonId}\n      type=\"button\"\n      className={classes}\n      onClick={onClick}\n      data-testid=\"picky-input\"\n      disabled={disabled}\n      {...rest}\n    >\n      {children}\n    </button>\n  );\n};\n\nButton.displayName = 'Picky(Button)';\nexport { Button };\n","import * as React from 'react';\nimport { debounce } from './lib/debounce';\nimport { includes } from './lib/includes';\nimport {\n  isDataObject,\n  hasItem,\n  keyExtractor,\n  hasItemIndex,\n  sortCollection,\n  arraysEqual,\n  asArray,\n} from './lib/utils';\nimport { Placeholder } from './Placeholder';\nimport { Filter } from './Filter';\nimport { Option } from './Option';\nimport './Picky.css';\nimport { SelectAll } from './SelectAll';\nimport { Button } from './Button';\nimport {\n  RenderListProps,\n  SelectAllMode,\n  RenderSelectAllProps,\n  RenderProps,\n  OptionsType,\n  OptionType,\n  ComplexOptionType,\n  SelectionState,\n} from './types';\n\ntype PickyState = {\n  selectedValue: OptionsType | OptionType | null;\n  open?: boolean;\n  filtered?: boolean;\n  filteredOptions: OptionsType;\n  allSelected: SelectionState;\n};\n\nexport type PickyProps = {\n  /**\n   * The ID for the component, used for accessibility\n   *\n   * @type {string}\n   * @memberof PickyProps\n   */\n  id: string;\n  /**\n   * Default placeholder text\n   *\n   * @type {string}\n   * @memberof PickyProps\n   */\n  placeholder?: string;\n\n  /**\n   * The value of the Picky.\n   * Picky is a controlled component so use this in conjunction with onChange and update the value accordingly\n   *\n   * @type {PickyValue}\n   * @memberof PickyProps\n   */\n  value?: OptionsType | OptionType;\n\n  /**\n   * The number of items to be displayed before the placeholder turns to \"5 selected\"\n   *\n   * @type {number} [3]\n   * @memberof PickyProps\n   */\n  numberDisplayed?: number;\n\n  /**\n   * True if multiple options can be selected\n   *\n   * @type {boolean}\n   * @memberof PickyProps\n   */\n  multiple?: boolean;\n\n  /**\n   * Options for the Picky component either [1, 2, 3] or [{label: \"1\", value: 1}] in conjunction with valueKey and labelKey props\n   *\n   * @type {any[]} [[]]\n   * @memberof PickyProps\n   */\n  options: any[];\n\n  /**\n   * Called when the selected value changes, use this to re-set the value prop\n   *\n   * @memberof PickyProps\n   */\n  onChange: (value: OptionsType | OptionType) => any;\n\n  /**\n   * Used to control whether the Picky is open by default\n   *\n   * @type {boolean}\n   * @memberof PickyProps\n   */\n  open?: boolean;\n\n  /**\n   * True if you want a select all option at the top of the dropdown.\n   * Won't appear if multiple is false\n   *\n   * @type {boolean}\n   * @memberof PickyProps\n   */\n  includeSelectAll?: boolean;\n\n  /**\n   * True if you want a filter input at the top of the dropdown, used to filter items.\n   *\n   * @type {boolean}\n   * @memberof PickyProps\n   */\n  includeFilter?: boolean;\n\n  /**\n   * Used to debounce onFilterChange events. Set value to zero to disable debounce. Duration is in milliseconds.\n   *\n   * @type {number} [300]\n   * @memberof PickyProps\n   */\n  filterDebounce?: number;\n\n  /**\n   * The max height of the dropdown, height is in px.\n   *\n   * @type {number} [300]\n   * @memberof PickyProps\n   */\n  dropdownHeight?: number;\n\n  /**\n   * Callback when options have been filtered.\n   *\n   * @memberof PickyProps\n   */\n  onFiltered?: (filteredOptions: any[]) => any;\n\n  /**\n   * Called when dropdown is opened\n   *\n   * @memberof PickyProps\n   */\n  onOpen?: () => any;\n\n  /**\n   * Called when dropdown is closed\n   *\n   * @memberof PickyProps\n   */\n  onClose?: () => any;\n\n  /**\n   *  Indicates which key is the value in an object. Used when supplied options are objects.\n   *\n   * @type {string}\n   * @memberof PickyProps\n   */\n  valueKey?: string;\n  /**\n   *  Indicates which key is the label in an object. Used when supplied options are objects.\n   *\n   * @type {string}\n   * @memberof PickyProps\n   */\n  labelKey?: string;\n\n  /**\n   * Render prop for individual options\n   *\n   * @memberof PickyProps\n   */\n  render?: (props: RenderProps) => any;\n\n  /**\n   * Tab index for accessibility\n   *\n   * @type {PickyTabIndex} [0]\n   * @memberof PickyProps\n   */\n  tabIndex?: number | undefined;\n\n  /**\n   * True if the dropdown should be permanently open.\n   *\n   * @type {boolean}\n   * @memberof PickyProps\n   */\n  keepOpen?: boolean;\n\n  /**\n   * The placeholder when the number of items are higher than {numberDisplayed} and all aren't selected.\n   * Default \"%s selected\" where %s is the number of items selected.\n   *\n   * @type {string} [\"%s selected\"]\n   * @memberof PickyProps\n   */\n  manySelectedPlaceholder?: string;\n\n  /**\n   * Default \"%s selected\" where %s is the number of items selected. This gets used when all options are selected.\n   *\n   * @type {string} [\"%s selected\"]\n   * @memberof PickyProps\n   */\n  allSelectedPlaceholder?: string;\n\n  /**\n   * Default select all text\n   *\n   * @type {string} [\"Select all\"]\n   * @memberof PickyProps\n   */\n  selectAllText?: string;\n\n  /**\n   * Render prop for rendering a custom select all component\n   *\n   * @memberof PickyProps\n   */\n  renderSelectAll?: (props: RenderSelectAllProps) => any;\n\n  /**\n   * If set to true, will focus the filter by default when opened.\n   *\n   * @type {boolean}\n   * @memberof PickyProps\n   */\n  defaultFocusFilter?: boolean;\n\n  /**\n   * Used to supply a class to the root picky component. Helps when using Picky with a CSS-in-JS library like styled-components\n   *\n   * @type {string}\n   * @memberof PickyProps\n   */\n  className?: string;\n\n  /**\n   * Render prop for whole list, you can use this to add virtualization/windowing if necessary.\n   *\n   * @memberof PickyProps\n   */\n  renderList?: (props: RenderListProps) => any;\n\n  /**\n   * Override the placeholder of the filter\n   *\n   * @type {string}\n   * @memberof PickyProps\n   */\n  filterPlaceholder?: string;\n  /**\n   * Will provide the input value of filter to the picky dropdown, so that if we have a larger list of options then we can only supply the matching options based on this value.\n   */\n  getFilterValue?: (term: string) => any;\n  /**\n   *  If true options will be returned when they match case, defaults to false\n   */\n  caseSensitiveFilter?: boolean;\n\n  /**\n   * Pass additional props the the button component\n   *\n   * @type {React.DetailedHTMLProps<React.ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>}\n   * @memberof PickyProps\n   */\n  buttonProps?: React.DetailedHTMLProps<\n    React.ButtonHTMLAttributes<HTMLButtonElement>,\n    HTMLButtonElement\n  >;\n\n  /**\n   * True if you want a disabled Picky\n   */\n  disabled?: boolean;\n\n  /**\n   * Allows for additional functionalty with select all and filtering, see the docs.\n   */\n  selectAllMode?: SelectAllMode;\n  /**\n   * When true the filter input will be cleared when the dropdown is closed\n   *\n   * @type {boolean}\n   */\n  clearFilterOnClose?: boolean;\n  /**\n   * A string function which takes the filter term and returns a new filter term.\n   *\n   * Useful for trimming the filter term.\n   *\n   * @type {StringFunc}\n   */\n  filterTermProcessor?: (term: string) => string;\n};\n\nclass Picky extends React.PureComponent<PickyProps, PickyState> {\n  static defaultProps = {\n    id: 'picky',\n    numberDisplayed: 3,\n    options: [],\n    filterDebounce: 150,\n    dropdownHeight: 300,\n    onChange: () => {},\n    tabIndex: 0,\n    keepOpen: true,\n    selectAllText: 'Select all',\n    selectAllMode: 'default',\n    filterTermProcessor: (term: string) => term,\n  };\n  node: HTMLDivElement | null = null;\n  filter: HTMLInputElement | null = null;\n  constructor(props: PickyProps) {\n    super(props);\n    this.state = {\n      selectedValue: props.value || (props.multiple ? [] : null),\n      open: props.open,\n      filtered: false,\n      filteredOptions: [],\n      allSelected: 'none',\n    };\n    this.toggleDropDown = this.toggleDropDown.bind(this);\n    this.toggleSelectAll = this.toggleSelectAll.bind(this);\n    this.onFilterChange = this.onFilterChange.bind(this);\n    this.selectValue = this.selectValue.bind(this);\n    this.allSelected = this.allSelected.bind(this);\n    this.handleOutsideClick = this.handleOutsideClick.bind(this);\n    this.isItemSelected = this.isItemSelected.bind(this);\n    this.focusFilterInput = this.focusFilterInput.bind(this);\n    this.getValue = this.getValue.bind(this);\n  }\n  UNSAFE_componentWillMount() {\n    this.setState({\n      allSelected: this.allSelected(),\n    });\n  }\n\n  componentDidMount() {\n    this.focusFilterInput(!!this.state.open);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('click', this.handleOutsideClick, false);\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps: PickyProps) {\n    if (\n      this.props.options !== nextProps.options ||\n      this.props.value !== nextProps.value\n    ) {\n      let valuesEqual = Array.isArray(nextProps.value)\n        ? arraysEqual(nextProps.value, this.props.value as OptionsType)\n        : nextProps.value === this.props.value;\n\n      let optsEqual = arraysEqual(nextProps.options, this.props.options);\n      const currentOptions = this.state.filtered\n        ? this.state.filteredOptions\n        : nextProps.options;\n      const currentValues = this.state.filtered\n        ? this.state.filteredOptions.filter(value => {\n            if (Array.isArray(nextProps.value)) {\n              return nextProps.value.includes(value);\n            }\n            return true;\n          })\n        : nextProps.value;\n      this.setState({\n        allSelected: !(valuesEqual && optsEqual)\n          ? // FIXME\n            //@ts-ignore\n            this.allSelected(currentValues, currentOptions)\n          : this.allSelected(),\n      });\n    }\n  }\n\n  selectValue(val: string | number) {\n    const valueLookup = this.props.value;\n    if (this.props.multiple && Array.isArray(valueLookup)) {\n      const itemIndex = hasItemIndex(\n        valueLookup,\n        val,\n        this.props.valueKey,\n        this.props.labelKey\n      );\n\n      let selectedValue: OptionsType = [];\n      if (itemIndex > -1) {\n        selectedValue = [\n          ...valueLookup.slice(0, itemIndex),\n          ...valueLookup.slice(itemIndex + 1),\n        ];\n      } else {\n        selectedValue = [...(this.props.value as OptionsType), val];\n      }\n      this.setState(\n        {\n          allSelected: this.allSelected(selectedValue),\n        },\n        () => {\n          this.props.onChange(selectedValue);\n        }\n      );\n    } else {\n      this.props.onChange(val);\n    }\n  }\n  /**\n   * Get the value of a given option or value safely\n   *\n   * @param {*} option\n   * @returns\n   * @memberof Picky\n   */\n  getValue(option: OptionType) {\n    return typeof this.props.valueKey !== 'undefined'\n      ? (option as ComplexOptionType)[this.props.valueKey]\n      : option;\n  }\n  /**\n   * Determine whether all items are selected\n   *\n   * @returns {Boolean}\n   * @memberof Picky\n   */\n  allSelected(\n    overrideSelected?: any[],\n    overrideOptions?: any[]\n  ): SelectionState {\n    const { value, options } = this.props;\n    const selectedValue = overrideSelected || value;\n    const selectedOptions = overrideOptions || options;\n\n    // If there are no options we are getting a false positive for all items being selected\n    if (selectedOptions && selectedOptions.length === 0) {\n      return 'none';\n    }\n    let copiedOptions = selectedOptions.map(this.getValue);\n    let copiedValues = Array.isArray(selectedValue)\n      ? selectedValue.map(this.getValue)\n      : [];\n\n    const areEqual = arraysEqual(\n      sortCollection(copiedValues),\n      sortCollection(copiedOptions)\n    );\n    if (areEqual) {\n      return 'all';\n    } else if (copiedValues.length > 0) {\n      return 'partial';\n    } else {\n      return 'none';\n    }\n  }\n  /**\n   * Toggles select all\n   *\n   * @memberof Picky\n   */\n  toggleSelectAll() {\n    if (this.props.disabled) return;\n    this.setState(\n      state => {\n        return {\n          ...state,\n          allSelected: this.state.allSelected === 'all' ? 'none' : 'all',\n        };\n      },\n      () => {\n        if (this.state.allSelected !== 'all') {\n          if (this.state.filtered) {\n            const diff = asArray(this.props.value).filter(\n              item => !this.state.filteredOptions.includes(item)\n            );\n            this.props.onChange(diff);\n          } else {\n            this.props.onChange([]);\n          }\n        } else {\n          if (this.state.filtered) {\n            let newValues = [\n              ...(this.props.value as any[]),\n              ...this.state.filteredOptions,\n            ];\n            this.props.onChange(newValues);\n          } else {\n            this.props.onChange(this.props.options);\n          }\n        }\n      }\n    );\n  }\n\n  isItemSelected(item: OptionType): boolean {\n    return hasItem(\n      this.props.value,\n      item,\n      this.props.valueKey,\n      this.props.labelKey\n    ) as boolean;\n  }\n\n  renderOptions() {\n    const items = this.state.filtered\n      ? this.state.filteredOptions\n      : this.props.options;\n\n    const {\n      labelKey,\n      valueKey,\n      multiple,\n      render,\n      tabIndex,\n      renderList,\n      disabled,\n    } = this.props;\n    if (renderList) {\n      return renderList({\n        items,\n        selected: this.props.value,\n        allSelected: this.state.allSelected,\n        multiple,\n        tabIndex,\n        getIsSelected: this.isItemSelected,\n        selectValue: this.selectValue,\n        disabled,\n      });\n    }\n    return items.map((item, index) => {\n      // Create a key based on the options value\n      const key = keyExtractor(item, valueKey, labelKey);\n\n      const isSelected = this.isItemSelected(item);\n      // If render prop supplied for items call that.\n      if (typeof render === 'function') {\n        return render({\n          index,\n          item,\n          isSelected,\n          selectValue: this.selectValue,\n          labelKey: labelKey,\n          valueKey: valueKey,\n          multiple: multiple,\n          disabled,\n        });\n      } else {\n        // Render a simple option\n        return (\n          <Option\n            key={key}\n            item={item}\n            isSelected={isSelected}\n            selectValue={this.selectValue}\n            labelKey={labelKey}\n            valueKey={valueKey}\n            multiple={Boolean(multiple)}\n            tabIndex={tabIndex}\n            disabled={Boolean(disabled)}\n            id={this.props.id + '-option-' + index}\n          />\n        );\n      }\n    });\n  }\n  /**\n   * Called when Filter term changes. Sets filteredOptions and filtered state.\n   *\n   * @param {any} term\n   * @returns\n   * @memberof Picky\n   */\n  onFilterChange(term: string) {\n    const processedTerm =\n      typeof this.props.filterTermProcessor === 'function'\n        ? this.props.filterTermProcessor(term)\n        : term;\n\n    /**\n     * getFilterValue function will provide the input value of filter to the picky dropdown, so that if we have a larger list of options then we can only supply the matching options based on this value\n     */\n    if (this.props.getFilterValue) {\n      this.props.getFilterValue(processedTerm);\n    }\n    if (!processedTerm.trim()) {\n      return this.setState({\n        filtered: false,\n        filteredOptions: [],\n        allSelected: asArray(this.props.value).length > 0 ? 'partial' : 'none',\n      });\n    }\n    const isObject = isDataObject(\n      this.props.options && this.props.options[0],\n      this.props.valueKey,\n      this.props.labelKey\n    );\n    const filteredOptions = this.props.options.filter(option => {\n      if (isObject) {\n        return includes(\n          option[this.props.labelKey!],\n          processedTerm,\n          !!this.props.caseSensitiveFilter\n        );\n      }\n      return includes(option, processedTerm, this.props.caseSensitiveFilter);\n    });\n    this.setState(\n      {\n        filtered: true,\n        filteredOptions,\n      },\n      () => {\n        if (this.props.onFiltered) {\n          this.props.onFiltered(filteredOptions);\n        }\n      }\n    );\n  }\n  /**\n   *\n   * Called by a click event listener. Used to determine any clicks that occur outside of the component.\n   * @param {MouseEvent} e\n   * @returns\n   * @memberof Picky\n   */\n  handleOutsideClick(e: any) {\n    // If keep open then don't toggle dropdown\n    // If radio and not keepOpen then auto close it on selecting a value\n    // If radio and click to the filter input then don't toggle dropdown\n    const keepOpen = this.props.keepOpen || this.props.multiple;\n    if (this.node && this.node.contains(e.target) && keepOpen) {\n      return;\n    }\n    if (this.filter && this.filter.contains(e.target)) {\n      return;\n    }\n    this.toggleDropDown();\n  }\n\n  focusFilterInput(isOpen: boolean) {\n    if (!this.filter) return;\n    if (isOpen && this.props.defaultFocusFilter) {\n      this.filter.focus();\n    }\n    if (!isOpen && this.props.clearFilterOnClose === true) {\n      this.filter.value = '';\n    }\n  }\n  /**\n   * Toggle state of dropdown\n   *\n   * @memberof Picky\n   */\n  toggleDropDown() {\n    if (!this.state.open) {\n      // Add event listener to listen for clicks to determine if click occured outside the component or not\n      document.addEventListener('click', this.handleOutsideClick, false);\n    } else {\n      // Remove\n      document.removeEventListener('click', this.handleOutsideClick, false);\n    }\n\n    this.setState(\n      state => {\n        return {\n          ...state,\n          // Toggle open state\n          open: !state.open,\n          filtered: this.props.clearFilterOnClose ? false : state.filtered,\n          filteredOptions: this.props.clearFilterOnClose\n            ? []\n            : state.filteredOptions,\n        };\n      },\n      () => {\n        const isOpen = !!this.state.open;\n        // Prop callbacks\n        this.focusFilterInput(isOpen);\n        if (isOpen && this.props.onOpen) {\n          this.props.onOpen();\n        } else if (!isOpen && this.props.onClose) {\n          this.props.onClose();\n        }\n      }\n    );\n  }\n\n  get filterDebounce() {\n    const { filterDebounce } = this.props;\n    const amount = filterDebounce || 0;\n    return (amount || 0) > 0\n      ? debounce(this.onFilterChange, amount)\n      : this.onFilterChange;\n  }\n\n  get showSelectAll(): boolean {\n    const { renderSelectAll, multiple, includeSelectAll } = this.props;\n    return Boolean(\n      !renderSelectAll &&\n        includeSelectAll &&\n        multiple &&\n        ((this.props.selectAllMode === 'default' && !this.state.filtered) ||\n          this.props.selectAllMode === 'filtered')\n    );\n  }\n  render() {\n    const {\n      className,\n      placeholder,\n      value,\n      multiple,\n      numberDisplayed,\n      includeFilter,\n      valueKey,\n      labelKey,\n      tabIndex,\n      dropdownHeight,\n      renderSelectAll,\n      filterPlaceholder,\n      disabled,\n      buttonProps,\n    } = this.props;\n    const { open } = this.state;\n    let ariaOwns = '';\n    if (open) {\n      ariaOwns += this.props.id + '-list';\n    }\n    const buttonId = `${this.props.id}__button`;\n    const dropdownStyle: React.CSSProperties = {\n      maxHeight: dropdownHeight,\n      overflowY: 'scroll',\n    };\n    return (\n      <div\n        ref={node => {\n          this.node = node;\n        }}\n        className={['picky', className].join(' ')}\n        id={this.props.id}\n        role=\"combobox\"\n        aria-controls={buttonId}\n        aria-expanded={open}\n        aria-haspopup={open}\n        aria-owns={ariaOwns}\n        tabIndex={tabIndex}\n      >\n        <Button\n          id={`${this.props.id}__button`}\n          disabled={disabled}\n          onClick={this.toggleDropDown}\n          {...buttonProps}\n        >\n          <Placeholder\n            allSelected={this.state.allSelected}\n            placeholder={placeholder}\n            manySelectedPlaceholder={this.props.manySelectedPlaceholder}\n            allSelectedPlaceholder={this.props.allSelectedPlaceholder}\n            value={value}\n            multiple={Boolean(multiple)}\n            numberDisplayed={numberDisplayed!}\n            valueKey={valueKey}\n            labelKey={labelKey}\n            data-testid=\"placeholder-component\"\n          />\n        </Button>\n        <div\n          className=\"picky__dropdown\"\n          id={this.props.id + '-list'}\n          aria-hidden={!open}\n          hidden={!open}\n          style={open ? dropdownStyle : { visibility: 'hidden' }}\n        >\n          {includeFilter && (\n            <Filter\n              tabIndex={tabIndex}\n              ref={filter => (this.filter = filter)}\n              placeholder={filterPlaceholder}\n              onFilterChange={this.filterDebounce}\n            />\n          )}\n          {renderSelectAll ? (\n            renderSelectAll({\n              filtered: Boolean(this.state.filtered),\n              allSelected: this.state.allSelected,\n              toggleSelectAll: this.toggleSelectAll,\n              tabIndex,\n              multiple: Boolean(multiple),\n              disabled: Boolean(disabled),\n            })\n          ) : (\n            <SelectAll\n              visible={this.showSelectAll}\n              tabIndex={tabIndex}\n              disabled={!!disabled}\n              allSelected={this.state.allSelected}\n              id={this.props.id}\n              selectAllText={this.props.selectAllText}\n              toggleSelectAll={this.toggleSelectAll}\n            />\n          )}\n          {open && <div data-testid=\"dropdown\">{this.renderOptions()}</div>}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport { Picky };\n"],"names":["debounce","fn","delay","timeoutID","args","clearTimeout","that","setTimeout","apply","includes","str","term","caseSensitive","String","toLowerCase","indexOf","isDataObject","obj","valueKey","labelKey","hasOwnProperty","hasItem","all","item","returnIndex","Array","isArray","find","findIndex","opt","indexOfItem","hasItemIndex","keyExtractor","sortCollection","array","sort","a","b","arraysEqual","left","right","length","leftLen","i","asArray","split","res","parts","len","value","arguments","Math","floor","substring","regex","format","message","test","from","join","isEmptyValue","undefined","Placeholder","React","placeholder","numberDisplayed","multiple","manySelectedPlaceholder","allSelectedPlaceholder","allSelected","map","tempValue","className","areEqual","defaultProps","displayName","prevProps","nextProps","Filter","ref","tabIndex","onFilterChange","type","onChange","e","target","Option","id","isSelected","selectValue","style","disabled","cssClass","body","inputType","select","role","onClick","onKeyPress","preventDefault","readOnly","checked","SelectAll","selectAllText","toggleSelectAll","visible","checkboxRef","current","indeterminate","Button","children","rest","buttonId","classes","Picky","props","state","selectedValue","open","filtered","filteredOptions","toggleDropDown","bind","handleOutsideClick","isItemSelected","focusFilterInput","getValue","UNSAFE_componentWillMount","setState","componentDidMount","componentWillUnmount","document","removeEventListener","UNSAFE_componentWillReceiveProps","options","valuesEqual","optsEqual","currentOptions","currentValues","filter","val","valueLookup","itemIndex","slice","option","overrideSelected","overrideOptions","selectedOptions","copiedOptions","copiedValues","diff","newValues","renderOptions","items","render","renderList","selected","getIsSelected","index","key","Boolean","processedTerm","filterTermProcessor","getFilterValue","trim","isObject","caseSensitiveFilter","onFiltered","keepOpen","node","contains","isOpen","defaultFocusFilter","focus","clearFilterOnClose","addEventListener","onOpen","onClose","includeFilter","dropdownHeight","renderSelectAll","filterPlaceholder","buttonProps","ariaOwns","dropdownStyle","maxHeight","overflowY","hidden","visibility","filterDebounce","showSelectAll","amount","includeSelectAll","selectAllMode"],"mappings":"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"}